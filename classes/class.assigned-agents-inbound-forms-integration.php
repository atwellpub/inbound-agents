<?php

if(!class_exists('Inbound_Assigned_Agents_Inbound_Forms_Integration')){
	
	class Inbound_Assigned_Agents_Inbound_Forms_Integration{
	
		function __construct(){
			self::load_hooks();
		
		}
		
		public static function load_hooks(){
			
			/*add the forms settings*/
			add_filter('inboundnow_forms_settings', array(__CLASS__,'inbound_assigned_agents_add_settings' ));
			
			/*add the form scripts*/
			add_action('admin_enqueue_scripts', array(__CLASS__, 'inbound_assigned_agents_enqueue_form_scripts'));
		
		}
	
	
	
	
		public static function inbound_assigned_agents_add_settings($fields){
			
			$fields['forms']['options']['inbound_assign_agent_enable'] = array(
                        'name' => __('Enable Agent Assignmet', 'inbound-pro'),
                        'desc' => __('Enable/Disable assigning agents to leads generated by this form.', 'inbound-pro'),
                        'type' => 'checkbox',
                        'std' => '',
                        'class' => 'main-form-settings exclude-from-refresh' );
			
	
			$fields['forms']['options']['inbound_assign_agent[]'] = array(
                        'name' => __('Assign to these agents:', 'inbound-pro'),
                        'desc' => __('Select the agents you want assigned to leads generated by this form.', 'inbound-pro'),
                        'type' => 'multiselect',
                        'std' => '',
                        'options' => Inbound_Assigned_Agents_Resources::$assigned_agents,
                        'class' => 'main-form-settings exclude-from-refresh' );
	
			$fields['forms']['options']['inbound_assign_to_agent_lead_group_enable'] = array(
                        'name' => __('Enable Agent Lead Group Assignment', 'inbound-pro'),
                        'desc' => __('Enable/Disable assigning generated leads to specific agent lead groups', 'inbound-pro'),
                        'type' => 'checkbox',
                        'std' => '',
                        'class' => 'main-form-settings exclude-from-refresh' );
	
			$fields['forms']['options']['inbound_assign_to_agent_lead_group[]'] = array(
                        'name' => __('Assign to these lead groups:', 'inbound-pro'),
                        'desc' => __('Select the lead groups to assign generated leads to. NOTE: This is a list of lead groups that the selected agents have in common, so only terms that ALL the selected agents have will be shown here.', 'inbound-pro'),
                        'type' => 'multiselect',
                        'std' => '1',
                        'options' => '',
                        'class' => 'main-form-settings exclude-from-refresh' );		
		
		
		
		
				return $fields;
		}
	
	
		public static function inbound_assigned_agents_enqueue_form_scripts(){
			global $post;

			//Enqueue the scripts for Inbound Agent support
			if ((isset($post)&&'inbound-forms'=== $post->post_type)||( isset($_GET['post_type']) && $_GET['post_type']==='inbound-forms')) {
				$current_screen = get_current_screen();
				//This if() is so the script isn't active on the forms listing page in the admin area. So it won't work on pages generated by edit.php
				if($current_screen->base != 'edit'){
					/*assigned-agents-inbound-forms.js*/
					wp_enqueue_script('assigned-agents-inbound-forms-js', INBOUNDNOW_LEAD_ASSIGNMENTS_URLPATH . 'js/assigned-agents-inbound-forms.js' , false , true );
					wp_localize_script( 'assigned-agents-inbound-forms-js', 'inbound_assigned_agents_group_vars', array( 'ajaxurl' => admin_url( 'admin-ajax.php' ), 'inbound_shortcode_nonce' => wp_create_nonce('inbound-shortcode-nonce'), 'form_cpt' => 'on' ) );
					
					/*css*/
					wp_enqueue_style('assigned-agents-form-styles', INBOUNDNOW_LEAD_ASSIGNMENTS_URLPATH . 'css/assigned-agents-inbound-forms.css' , false , true );

				}
			}
			
	
		}
	}//end class


	new Inbound_Assigned_Agents_Inbound_Forms_Integration;

}




































?>
